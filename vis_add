 //---Sends image to Google Vision for OCR detection of text
  let submitToGoogle = async (tempDocUrl) => {
    try {
      
      let body = JSON.stringify({
        requests: [
          {
            features: [
            //{ type: "LABEL_DETECTION", maxResults: 10 },
            //{ type: "LOGO_DETECTION", maxResults: 5 }, 
            //{ type: "TEXT_DETECTION", maxResults: 5 },
            { type: "DOCUMENT_TEXT_DETECTION", maxResults: 5 },
            //{ type: "SAFE_SEARCH_DETECTION", maxResults: 5 },
            //{ type: "IMAGE_PROPERTIES", maxResults: 5 },
            //{ type: "CROP_HINTS", maxResults: 5 },
            //{ type: "WEB_DETECTION", maxResults: 1 } 
            ],
           
            image: {
              source: {
                imageUri: tempDocUrl
              
              }
            }
          }
        ]
      });
      let response = await fetch(
        "https://vision.googleapis.com/v1/images:annotate?key=" +
          Environment["GOOGLE_CLOUD_VISION_API_KEY"]+"&fields=responses.fullTextAnnotation",
        {
          headers: {
            Accept: "application/json",
            "Content-Type": "application/json"
          },
          method: "POST",
          body: body
        }
      );
      let responseJson = await response.json();
      //console.log(responseJson);
      var arr = responseJson.responses[0].fullTextAnnotation.pages;
      var i;
      var j;
      var k;
      var l;
      var p;
      var str = "";
      var fullText = "";
      for(i=0; i<arr.length; i++){
        for(j=0; j<arr[i].blocks.length; j++){
          for(k=0; k<arr[i].blocks[j].paragraphs.length; k++){
            for(l=0; l<arr[i].blocks[j].paragraphs[k].words.length; l++){
              var str = str+"";
              var fullText = fullText+"";
              for(p=0; p<arr[i].blocks[j].paragraphs[k].words[l].symbols.length; p++){
                var str = str+""+arr[i].blocks[j].paragraphs[k].words[l].symbols[p].text;         
                var fullText = fullText+""+arr[i].blocks[j].paragraphs[k].words[l].symbols[p].text;         
                
              }
              str = str + " "+arr[i].blocks[j].paragraphs[k].words[l].symbols[0].boundingBox.vertices[0].y +"\n";
              str = str + "";
              fullText = fullText + "\n";
            }
                  
          }  
        } 
      } 
      console.log(fullText);
      //Trim whitespaces from string
      var trimGoogleArr = str.trim();
      //Convert string to array separated by new line and space
      var googleArr = trimGoogleArr.split("\n").map(item => item.split(" "));
      //Sort array by ascending y-coordinates to corresponde each words line
      var sortedArray = googleArr.sort((a, b) => parseFloat(a[1]) - parseFloat(b[1]));
      //Create new array by grouping within y-coordianates and offset by 11 points
      var a, leng, i;
      var full = "";
      var Array1 = sortedArray;
      var Array2 = [];
      leng = Array1.length - 1;
      Array1[Array1.length] =[0,0];
      Array2[0] = Array1[0][0];
      a = 0;
      for (i=0;i<leng+1;i++){
        var full = full + "";
        if (Math.abs(Array1[i][1] - Array1[i+1][1])<=11) {
            Array2[a] = Array2[a] +" " + Array1[i+1][0];
            full = full + " " +Array2[a] +" " + Array1[i+1][0] + "\n";
          }
          else {
            a =a+1;
            Array2[a] = Array1[i+1][0];
            full=full+" " + Array1[i+1][0];
          }
      }
      //Pass array to extract function to prepopulate name, date, price, store
      extractInfo(Array2);
      //Pass to Store name extraction function for comparison
      extractStore(full, Array2);
      
     } catch (error) {
      console.log(error);
    } 
    
  };
//-----------
